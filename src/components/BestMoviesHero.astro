---
import { Icon } from 'astro-icon/components';
import { getTranslationFunction } from '../utils/localization.ts';
import { getRelativeLocaleUrl } from "astro:i18n";
import { Image } from 'astro:assets';

const { lang } = Astro.params;
const { films } = Astro.props;

const t = getTranslationFunction(lang);
---

<style>
  .arrow {
    height: 2.25rem; /* Adjust the height as needed */
    width: 2.25rem; /* Adjust the width as needed */
    opacity: 0.8; /* Slightly transparent */
  }

  .arrow:hover {
    transform: scale(1.2); /* Slightly enlarge on hover */
    transition: transform 0.2s ease-in-out;
    opacity: 1; /* Fully opaque on hover */
  }

  .fade-enter-active,
  .fade-leave-active {
    transition: opacity 0.2s;
  }

  .fade-enter,
  .fade-leave-to {
    opacity: 0;
  }

  .dots-container {
    display: flex;
    justify-content: center;
    margin-top: 1rem;
    position: absolute;
    bottom: 2rem; /* Position the dots container 2rem from the bottom */
    left: 50%;
    transform: translateX(-50%);
  }

  /* Custom classes for responsive adjustments */
  .banner-container {
    /* Default height via inline style (70vh) will be overridden on mobile */
  }
  .banner-title {}
  .banner-subtitle {}
  .banner-synopsis {}
  .banner-button {}

  /* Mobile adjustments */
  @media (max-width: 640px) {
    .banner-container {
      height: 100vh !important; /* Full viewport height on mobile */
      max-height: none !important; /* Remove max-height constraint */
      aspect-ratio: unset !important; /* Remove aspect ratio constraint */
    }
    .banner-title {
      font-size: 1.75rem !important; /* Smaller title on mobile */
    }
    .banner-subtitle {
      font-size: 1rem !impo rtant; /* Adjust subtitle size */
    }
    .banner-synopsis {
      font-size: 0.875rem !important; /* Smaller synopsis text */
    }
    .banner-button {
      padding: 0.75rem 1rem !important; /* Smaller button padding */
      font-size: 0.875rem !important;
    }
    .dots-container {
      bottom: 1rem; /* Adjust dots container position */
    }
    .arrow {
      
      height: 1.75rem; /* Smaller arrow size on mobile */
      width: 1.75rem; /* Smaller arrow size on mobile */
    }
    /* Reposition arrows on mobile so they do not overlap the banner text */
    .arrow-right {
      top: auto;
      bottom: 1rem;
      right: 1rem;
    }
    .arrow-left {
      top: auto;
      bottom: 1rem;
      left: 1rem;
    }
    .film-slide img {
      object-fit: cover !important;
      object-position: center 20% !important; /* Adjust vertical position */
      height: 100% !important;
      width: 100% !important;
    }
  }
</style>

<div class="banner-container mb-6 mx-0 relative w-full rounded" style="height: 70vh;" role="banner" aria-labelledby="banner-heading">
  {films.map((film, index) => (
    <div class={`absolute w-full h-full transition-opacity duration-300 ease-in-out film-slide ${index === 0 ? 'opacity-100' : 'opacity-0'}`}>
      <Image 
        src={film.extended_info.poster_max_quality_url}
        alt={t("Movie poster of %1").replace("%1", film.locationInfo.title)}
        class="w-full h-full object-cover"
        loading={index === 0 ? 'eager' : 'lazy'}
        width={1920}
        height={1080}
      />
      <div class="absolute inset-0 flex items-center mx-auto px-6 container">
        <div class="sm:w-1/2 lg:w-1/3 space-y-4" style="z-index: 1;">
          <h1 id={`banner-heading-${index}`} class="banner-title text-3xl sm:text-5xl font-bold mb-4 text-white drop-shadow-xl">
            {film.locationInfo.title}
          </h1>
          <div class="banner-subtitle text-xl sm:text-2xl font-medium mb-2 text-red-400">
            {t("Sub | Dub")}
          </div>
          <p class="banner-synopsis text-lg sm:text-xl leading-relaxed text-gray-300 line-clamp-4">
            {film.locationInfo.synopsis}
          </p>
          <a href={getRelativeLocaleUrl(Astro.currentLocale, film.slug)}>
            <button class="banner-button bg-red-500 hover:bg-red-700 text-white font-semibold px-4 py-2 sm:px-6 sm:py-3 rounded shadow transition ease-in-out duration-150 mt-4"  
                    aria-label={t("Discover %1").replace("%1", film.locationInfo.title)}>
              {t("DISCOVER THIS MOVIE")}
            </button>
          </a>
        </div>
      </div>
    </div>
  ))}

  <div class="absolute w-full h-full bg-gradient-to-r from-black via-gray-800 to-transparent opacity-70"></div>

  <div class="absolute inset-0 z-0" style="pointer-events: none;">
    <div class="absolute bottom-0 w-full h-1/2 bg-gradient-to-b from-transparent via-transparent to-gray-900"></div>
  </div>

  <!-- Right Arrow -->
  <div class="absolute inset-y-0 right-0 flex items-center pr-4 animate-subtleBounce arrow-right">
    <Icon name="fa-solid:chevron-right" class="arrow text-white cursor-pointer" aria-label={t("Next movie")}/>
  </div>

  <!-- Left Arrow: Removed 'lg:flex hidden' so it's visible on all screen sizes -->
  <div class="absolute inset-y-0 left-0 flex items-center pl-4 animate-subtleBounce arrow-left">
    <Icon name="fa-solid:chevron-left" class="arrow text-white cursor-pointer" aria-label={t("Previous movie")}/>
  </div>

  <div class="dots-container space-x-10" role="tablist" aria-label={t("Movie banner navigation")}>
    {films.map((_, dotIndex) => (
      <button
        class={`dot w-3 h-3 rounded cursor-pointer transform transition-transform duration-500 ease-in-out ${dotIndex === 0 ? 'bg-red-400 scale-150' : 'bg-gray-500 hover:bg-red-500'}`}
        aria-label={t("Go to movie %1").replace("%1", dotIndex + 1)}
        data-index={dotIndex}
        aria-controls={`banner-heading-${dotIndex}`}
        aria-selected={dotIndex === 0 ? 'true' : 'false'}
        role="tab"
      ></button>
    ))}
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    let activeIndex = 0;
    const films = Array.from(document.querySelectorAll('.film-slide'));
    const dots = Array.from(document.querySelectorAll('.dot'));

    function updateActiveSlide(newIndex) {
      films[activeIndex].classList.remove('opacity-100');
      films[activeIndex].classList.add('opacity-0');
      dots[activeIndex].classList.remove('bg-red-400', 'scale-150');
      dots[activeIndex].setAttribute('aria-selected', 'false');
      dots[activeIndex].classList.add('bg-gray-500');

      activeIndex = newIndex;
      films[activeIndex].classList.remove('opacity-0');
      films[activeIndex].classList.add('opacity-100');
      dots[activeIndex].classList.remove('bg-gray-500');
      dots[activeIndex].setAttribute('aria-selected', 'true');
      dots[activeIndex].classList.add('bg-red-400', 'scale-150');
    }

    document.querySelector('.arrow-right').addEventListener('click', () => {
      const nextIndex = (activeIndex + 1) % films.length;
      updateActiveSlide(nextIndex);
    });

    document.querySelector('.arrow-left').addEventListener('click', () => {
      const prevIndex = (activeIndex - 1 + films.length) % films.length;
      updateActiveSlide(prevIndex);
    });

    dots.forEach((dot) => {
      dot.addEventListener('click', () => {
        const index = parseInt(dot.getAttribute('data-index'), 10);
        updateActiveSlide(index);
      });
    });
  });
</script>
