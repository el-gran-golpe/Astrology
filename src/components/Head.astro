---
import { SEO } from 'astro-seo';
import { getAstroSeoAlternateLocales } from '../utils/seoUtils.ts';
import { supportedLocales } from '../utils/localization.ts';
import { getMIMETypeFromURL } from '../utils/utils.ts';
import { movieInfoToOpenGraph, movieInfoToSchemaOrg } from '../utils/utils.ts';
import { getEntry } from 'astro:content';
import { getTranslationFunction } from '../utils/localization.ts';


interface Props {
  title: string;
  description: string;
  lang: string;
  afterLangUrl: string;
  OGTitle: string;
  OGType: string;
  OGImage: string;
  OGImageAlt: string;
  OGTrailer?: string;
  filmInfo?: Record<string, any>;
  OGTags?: String[];
}

const { title, description, lang, afterLangUrl, 
  OGTitle, OGType, OGImage, OGImageAlt, OGTrailer, filmInfo, OGTags } = Astro.props;

let movieInfoExtends = null;
let schemaOrgInfo = null;
if (filmInfo){
  const GENRE_CODES_TO_NAME = (await getEntry('codes', 'genres')).data;  
  const t = getTranslationFunction(lang);
  const genres = filmInfo?.basic_info.genres.map((genre: string) => t(GENRE_CODES_TO_NAME[genre])) || []

  movieInfoExtends = movieInfoToOpenGraph(filmInfo, OGTags || []);
  schemaOrgInfo = movieInfoToSchemaOrg(filmInfo, 'url', genres);
  schemaOrgInfo = JSON.stringify(schemaOrgInfo);
  console.log("Returned schemaOrgInfo", schemaOrgInfo);

}

const OGImageMIMEType = await getMIMETypeFromURL(OGImage);
---

<head>
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <SEO
      title={title},
      description={description}
      charset='utf-8'
      languageAlternates={getAstroSeoAlternateLocales(afterLangUrl)}

      openGraph={{
        basic: {
    		  //TODO: https://ogp.me/#types (Add the actors). Also use the duration, release date... And set it if it is an episode or tv show
          title: OGTitle,
          type: OGType,
          image: OGImage,
          //Study about url (https://github.com/jonasmerlin/astro-seo?tab=readme-ov-file)
        },
        optional: {
          locale: lang,
          localeAlternate: supportedLocales,
          siteName: "SiteName",
          video: OGTrailer
        },
        image:{
          type: OGImageMIMEType || 'image/jpeg',
          alt: OGImageAlt
        }
      }}

      extend={{
        meta: movieInfoExtends
      }}
    />
    {schemaOrgInfo && (
      <script type="application/ld+json" set:html={schemaOrgInfo}></script>
    )}
</head>