---
import "../../layouts/global.css";

// Import the components
import Head from "../../components/Head.astro";
import Banner from "../../components/react/Banner.jsx";
import NavBar from "../../components/NavBar/NavBar.astro";
import MovieCard from "../../components/MovieCard/MovieCard.astro";
import VisitedFilmsGrid from "../../components/react/VisitedFilmsGrid.jsx";
import Grid from '../../components/Grid.astro';

// Import your getHomePageFilmsByLang function
import { getHomePageFilms } from "../../utils/staticPathsGeneration.ts";
import { getTranslationFunction } from "../../utils/localization.ts";
import { getEntry } from "astro:content";
import { getRelativeLocaleUrl } from "astro:i18n";

// Fetch the films
export async function getStaticPaths() {
    return await getHomePageFilms(10);
}

// Destructure the props
const { topLocationFilms, bannerFilms, topClassics, topRecent, topNominations, topHorror, topDocumentary } = Astro.props;
const { lang } = Astro.params;

// Get the translation function
const t = getTranslationFunction(lang);
const LANG_CODES_TO_NAMES = (await getEntry('location', 'languages-to-names')).data;
const config = (await getEntry("configs", "site-config")).data;
const sectionDescriptions = (await getEntry("seo", "section-descriptions")).data;

// Create an array of grid sections with title and subtitle
const gridSections = [
    {   
        ...sectionDescriptions["other"]["recent"],
        films: topRecent
    },
    {
        ...sectionDescriptions["other"]["classics"],
        films: topClassics
    },
    {
        ...sectionDescriptions["other"]["awards"],
        films: topNominations
    },
    {
        ...sectionDescriptions["genre"]["TE"],
        films: topHorror
    },
    {
        ...sectionDescriptions["genre"]["DO"],
        films: topDocumentary
    },
    {
        ...sectionDescriptions["lang"][lang],
        films: topLocationFilms
    }
];

---
<html lang={lang}>
    <Head
        title={config["siteName"]}
        description={t("meta.description")}
        lang={lang}
        afterLangUrl={""}
        OGTitle={config["siteName"]}
        OGType={"website"}
        OGImage={config["OGImage.home"]}
        OGImageAlt={`${config["siteName"]} Banner`}
    />
    <body>
        <NavBar />
        <div class="bg-gray-900 text-white">
            <!-- Banner component with film data -->
            <header>
                <Banner client:only="react" films={bannerFilms} lang={Astro.params.lang} />
            </header>
            
            <!-- Main content -->
            <main class="container mx-auto px-6 py-4" role="main">
                {gridSections.map((section) => (
                    <section aria-labelledby={section.id} aria-describedby={`${section.id}-description`} class="mb-8">
                        <h2 id={section.id} class="flex items-center text-3xl font-bold mb-6">
                            <a href={getRelativeLocaleUrl(Astro.currentLocale, section.redirect_url)}>
                            <span class="text-white">{t(section.title)}</span>
                            </a>
                            <span class="text-gray-400 font-light ml-2">{t(section.subtitle)}</span>
                        </h2>
                        <p id={`${section.id}-description`} class="sr-only">
                            {t(section.description)}
                        </p>
                        <!-- Grid of movie cards -->
                        <Grid>
                            {section.films.map((film) => (
                                <MovieCard
                                    movieYear={film.basic_info.year}
                                    posterUrl={film.extended_info.poster_thumbnail_url}
                                    movieTitle={film.locationInfo.title}
                                    movieSlug={film.slug}
                                    movieDuration={film.basic_info.duration_minutes}
                                    moviePlot={film.locationInfo.short_synopsis}
                                    movieScore={film.film_affinity_info?.score?.average ?? 'Not available'} />
                            ))}
                        </Grid>
                    </section>
                ))}
                
                <!-- Grid of visited films -->
                <!-- TODO: Implement this after the release -->
                <!-- <section aria-labelledby="visited-films">
                    <h2 id="visited-films" class="flex items-center text-3xl font-bold text-white py-6">
                        {t("Visited films")}
                    </h2>
                    <div class='container'>
                        {<VisitedFilmsGrid currentLocale={Astro.currentLocale} client:only="react"/>}
                    </div>
                </section> -->
            </main>
        </div>
    </body>
</html>
